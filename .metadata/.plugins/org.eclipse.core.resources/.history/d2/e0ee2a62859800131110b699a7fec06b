package de.tudarmstadt.gdi1.project;
import de.tudarmstadt.gdi1.project.cipher.substitution.monoalphabetic.*;
import java.util.*;

public class KeywordMonoalphabeticCipher extends Monoalphabetic {

	Alphabet source; //ausgehendes Alphabet
	Alphabet key; //Alphabet, in das verschlüsselt wird
	String keyword; //Passwort
	
	/**
	 * Konstruktor für ein MonoalphabeticCipher 
	 * @param source ausgehendes Alphabet
	 * @param key Schlüsselalphabet
	 * @param keyword Passwort
	 */
	public KeywordMonoalphabeticCipher(Alphabet source, Alphabet key, String keyword) {
		super(key, source);
		this.keyword = keyword;
		
		Set<Character> keywordAlphSet = new HashSet<>();
		char[] keywordArray = keyword.toCharArray();
		
		for (int i = 0; i < keywordArray.length; i++) {
			keywordAlphSet.add(keywordArray[i]);
		}
		
		char[] restAlphabet = key.reverseAlphabet(key).asCharArray();
		
		for (int i = 0; i < 25-keywordArray.length; i++) {
			keywordAlphSet.add(restAlphabet[i]);
		}
		
		key = new Alphabet(keywordAlphSet);
		
		
		
		}
	
}
