package de.tudarmstadt.gdi1.project;

public class Alphabet implements de.tudarmstadt.gdi1.project.alphabet.Alphabet {

char[] alphabet; //das aktuelle Alphabet
	
	public Alphabet(char[] alphabet) 
	{
		createAlphabet(char[] alphabet);
	}

	/**
	 * Setzt das aktuelle Alphabet auf das übergebene Alphabet.
	 * @param alphabet ein übergebenes Alphabet
	 * @throws DoppelterBuchstabeException Fehler bei doppeltem Buchstaben im Array
	 */
	public void createAlphabet(char[] alphabet) {
		try { 	if (checkAlphabet(alphabet)==true) this.alphabet = alphabet; //setzt das 
				//aktuelle Alphabet auf das gegebene Alphabet bei Korrektheit
		
				else throw new DoppelterBuchstabeException(); } //wirft Exception bei 
				//fehlerhaftem Alphabet
		
		catch(DoppelterBuchstabeException dbe) { //gibt Fehlermeldung aus
			System.out.println("Illegales Alphabet: Doppelte Buchstaben enthalten!");
			this.alphabet = null;
		}
			
	}
	
	/**
	 * Überprüft das gegebene Alphabet auf doppelte Buchstaben.
	 * @param alphabet ein gegebenes Alphabet
	 * @return true, falls es korrekt ist, false wenn nicht
	 */
	public boolean checkAlphabet(char[] alphabet) {
		char[] hilf = new char[alphabet.length]; //"Hilfsalphabet", das die bereits 
		//vorgekommenen Buchstaben enthält
		
		for (int i = 0; i < alphabet.length; i++) {
			
			for (int j = 0; j < i; j++) {
				if (alphabet[i] == hilf[j]) return false; //durchsucht das bestehende 
				//Hilfsarray nach dem aktuellen Buchstaben im Alphabetarray und wenn es 
				//vorkommt, bricht er sofort ab und returnt false
			}
			hilf[i] = alphabet[i]; //wenn der aktuelle Buchstabe nicht vorkam, wird dieser 
			//an die Stelle im Hilfsarray eingefügt
		}
		
		return true; //wenn alles glattlief, wird true ausgegeben (d.h. es kamen keine
		//doppelten Buchstaben vor)
	}
	
}
